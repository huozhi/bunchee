name: CI

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:

jobs:
  install_and_test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        node-version: [18, 20]

    name: Node ${{ matrix.node-version }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v2

      - name: Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm
          registry-url: 'https://registry.npmjs.org'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Typecheck
        run: pnpm typecheck

      - name: Build
        run: pnpm build

      - name: Test
        run: |
          pnpm test
          pnpm test:post

  release:
    runs-on: ubuntu-latest
    needs: [install_and_test]
    if: startsWith(github.ref, 'refs/tags/')
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2.2.4

      - name: Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm
          registry-url: 'https://registry.npmjs.org'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Determine tag
        id: determine_tag
        run: |
          echo "tag=$(echo $GITHUB_REF | grep -Eo 'alpha|beta|rc')" >> $GITHUB_OUTPUT

      - name: Publish to versioned tag
        if: steps.determine_tag.outputs.tag != ''
        run: |
          echo "Publishing to ${{ steps.determine_tag.outputs.tag }} tag"
          npm publish --tag ${{ steps.determine_tag.outputs.tag }}

      - name: Publish to latest
        if: steps.determine_tag.outputs.tag == ''
        run: |
          echo "Publishing to latest"
          npm publish
