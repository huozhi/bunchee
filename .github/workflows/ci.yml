name: CI

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:

jobs:
  install_and_test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        node-version: [14, 16, 18]

    name: Node ${{ matrix.node-version }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install
        uses: ./.github/workflows/install

      - name: Lint
        run: |
          yarn typecheck
          yarn test
          yarn build

  determine_channel:
    runs-on: ubuntu-latest
    needs: install_and_test
    if: steps.install_and_test.outputs.test_exit_code == '0'
    steps:
      - name: Determine channel
        id: determine_channel
        run: |
          echo "::set-output name=channel::$(echo $GITHUB_REF | grep -Eo 'alpha|beta|rc')"

  release:
    needs: determine_channel
    if: startsWith(github.ref, 'refs/tags/')
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    steps:
      - name: Get tag name
        id: get_tag
        run: echo "::set-output name=tag_name::$(echo ${{github.ref}} | cut -d '/' -f 3)"
      - name: Determine if the tag is a beta, alpha or rc tag
        id: determine_channel
        run: |
          if [[ ${{steps.get_tag.outputs.tag_name}} == *"beta"* ]]; then
            echo "::set-output name=channel::beta"
          elif [[ ${{steps.get_tag.outputs.tag_name}} == *"alpha"* ]]; then
            echo "::set-output name=channel::alpha"
          elif [[ ${{steps.get_tag.outputs.tag_name}} == *"rc"* ]]; then
            echo "::set-output name=channel::rc"
          else
            echo "::set-output name=channel::stable"

      - name: Add auth token to npmrc
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc

      - name: Publish
        if: steps.determine_channel.outputs.channel != ''
        run: |
          echo "Publishing to ${{steps.determine_channel.outputs.channel}} channel"
          npm publish --tag ${{steps.determine_channel.outputs.channel}}
        else:
          echo "Publishing to default channel"
          npm publish

          else
            npm publish
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
          npm publish --access public
