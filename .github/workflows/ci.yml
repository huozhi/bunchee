name: CI

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:

jobs:
  install_and_test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        node-version: [14, 16, 18]

    name: Node ${{ matrix.node-version }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Use Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get Yarn Cache Directory Path
        id: yarn-cache-dir-path
        run: |
          echo "cache_dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
          echo "cache_key=${{ runner.os }}-node-${{ matrix.node-version }}-yarn-" >> $GITHUB_OUTPUT



      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.cache_dir }}
          key: ${{ steps.yarn-cache-dir-path.outputs.cache_key }}
          restore-keys: ${{ steps.yarn-cache-dir-path.outputs.cache_key }}

      - name: Install Dependencies
        run: yarn install --frozen-lockfile --prefer-offline

      - name: Lint
        run: |
          yarn typecheck
          yarn build
          yarn test

  determine_channel:
    runs-on: ubuntu-latest
    needs: install_and_test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Determine channel
        id: determine_channel
        run: |
          echo "channel=$(echo $GITHUB_REF | grep -Eo 'alpha|beta|rc')" >> $GITHUB_OUTPUT

  release:
    runs-on: ubuntu-latest
    needs: [install_and_test, determine_channel]
    if: startsWith(github.ref, 'refs/tags/')
    env:
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Restore Cached Dependencies
        uses: actions/cache@v3
        with:
          path: ${{ needs.install_and_test.steps.yarn-cache-dir-path.outputs.cache_dir }}
          key: ${{ needs.install_and_test.steps.yarn-cache-dir-path.outputs.cache_key }}
          restore-keys: ${{ needs.install_and_test.steps.yarn-cache-dir-path.outputs.cache_key }}

      - name: Add auth token to npmrc
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc

      - name: Publish to tagged channel
        if: steps.determine_channel.outputs.channel != ''
        run: |
          echo "Publishing to ${{ steps.determine_channel.outputs.channel }} channel"
          npm publish --tag ${{ steps.determine_channel.outputs.channel }}

      - name: Publish to latest
        if: steps.determine_channel.outputs.channel == ''
        run: |
          echo "Publishing to latest channel"
          npm publish
